
object Def_Method_Function extends App {

  // TODO 方法与函数的区别 https://blog.csdn.net/love666666shen/article/details/79181018   100++
//TODO 方法变函数：  在方法名之后，加上一个空格，然后再加上一个下划线的形式，变成函数，赋值给一个变量，最后通过该变量名，带上参数列表调用该函数
//
  //  由于Scala是函数式编程语言，而在函数式编程语言中，函数是“头等公民”，它可以像任何其他数据类型一样被传递和操作 ，
  //  因此在平常的使用时也常将方法也泛称为函数，如第2节所说的函数许多是不合适的。
  //  在Scala中函数和方法有什么区别，平时使用中也做太多的关注，这里也趁着这篇文章了解、总结一下。
  //
  //  方法和函数是作为两种东西在scala中存在的，在大多数时候他们差不太多，但是时不时的可能会有一些问题体现出他们各自不一样的情况。
  //
  //  函数类型：形式为(T1,…, Tn) => U，其实是FunctionN trait的简写形式，匿名函数和方法值具有这种类型(其实可以作为方法类型的一部分)。
  //  方法类型：一个非值类型(non-value type),里边是没有值的，一个方法值具有函数类型，用def定义。


  // 1.方法可以作为一个表达式的一部分出现（调用函数并传参），但（带参方法）不能作为最终的表达式，函数可以作为最终的表达式出现：
  //  2.方法可以没有参数列表，函数必须有，也就是说参数列表方法可省略，函数不可省略。
  //  3.函数名后必须加括号才代表函数调用，否则为该函数本身，而方法名后不加括号为方法调用。
  //    方法名意味着方法调用，函数名只是代表函数自身
  //    因为方法不能作为最终的表达式存在，所以如果你写了一个方法的名字并且该方法不带参数（没有参数列表或者无参)，该表达式的意思是：调用该方法得到最终的表达式。
  //    而函数可以作为最终表达式出现，如果直接使用函数的名字，函数
  //    调用并不会发生，该方法自身将作为最终的表达式进行返回，如果要强制调用一个函数，你必须在函数名后面写()。
  //  4.方法可以进行eta展开，即自动转换为函数
  //  val f1 = method111 _ 方法名后 空格 + _
  //
  //  5.方法不是值，函数是值，所以方法不能绑定给一个val变量，函数可以
  //  val f1 = method111 _  方法名后 空格 + _
  //
  //  6.方法有重载情况时，如果自动将方法转换为函数，需要指定参数和返回值类型
  //
  //  7.方法可以使用参数序列，转换称函数使用Seq对象
  //
  //  8.方法支持默认参数值，函数不能省略参数，不支持

}
